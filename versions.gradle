//Shared file between builds so that they can all use the same dependencies and versions
ext.deps = [:]
def deps = [:]
def build_versions = [:]
def versions = [:]

build_versions.min_sdk = 19
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
build_versions.android_support_library = "28.0.0"
build_versions.android_support_multidex = "1.0.3"
ext.build_versions = build_versions

versions.android_gradle_plugin = '3.2.1'
versions.kotlin = "1.3.10"
versions.jacoco = "0.8.2"
versions.constraint_layout = "1.1.3"
versions.koin = '1.0.2'
versions.room = "1.1.1"

//Test dependency versions:
versions.androidx_test = "1.0.0"
versions.androidx_test_runner = "1.1.0"
versions.google_truth = "0.42"
versions.espresso = "3.1.0"
versions.robolectric = "4.0"
versions.fastlane = "1.2.0"


//====>Classpath dependencies:
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

def kotlin = [:]
kotlin.gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
//kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
//kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def jacoco = [:]
jacoco.gradle_plugin = "org.jacoco:org.jacoco.core:$versions.jacoco"
deps.jacoco = jacoco


//====>App dependencies:
def android_support = [:]
android_support.appcompatv7 = "com.android.support:appcompat-v7:$build_versions.android_support_library"
android_support.design = "com.android.support:design:$build_versions.android_support_library"
android_support.vector_drawable = "com.android.support:support-vector-drawable:$build_versions.android_support_library"
android_support.multidex = "com.android.support:multidex:$build_versions.android_support_multidex"
deps.android_support = android_support

deps.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"

def koin = [:]
//koin.core = "org.koin:koin-android:$versions.koin"
koin.viewmodel = "org.koin:koin-android-viewmodel:$versions.koin"
//koin.scope = "org.koin:koin-android-scope:$versions.koin"
deps.koin = koin

// https://developer.android.com/topic/libraries/architecture/adding-components#room
def room = [:]
room.runtime = "android.arch.persistence.room:runtime:$versions.room"
room.compiler = "android.arch.persistence.room:compiler:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"
//room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
//room.guava = "android.arch.persistence.room:guava:$versions.room"
deps.room = room

//Test dependencies
def testing = [:]
testing.androidx_core = "androidx.test:core:$versions.androidx_test"
testing.androidx_runner = "androidx.test:runner:$versions.androidx_test_runner"
testing.androidx_rules = "androidx.test:rules:$versions.androidx_test_runner"

testing.androidx_junit = "androidx.test.ext:junit:$versions.androidx_test"
testing.androidx_truth = "androidx.test.ext:truth:$versions.androidx_test"
testing.google_truth = "com.google.truth:truth:$versions.google_truth"

testing.espresso_core = "androidx.test.espresso:espresso-core:$versions.espresso"
testing.espresso_contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
testing.espresso_intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
testing.espresso_accessibility = "androidx.test.espresso:espresso-accessibility:$versions.espresso"
testing.espresso_web = "androidx.test.espresso:espresso-web:$versions.espresso"
testing.espresso_idling_concurrent = "androidx.test.espresso.idling:idling-concurrent:$versions.espresso"

testing.espresso_idling_resource = "androidx.test.espresso:espresso-idling-resource:$versions.espresso"

testing.robolectric = "org.robolectric:robolectric:$versions.robolectric"

testing.fastlane = "tools.fastlane:screengrab:$versions.fastlane"

deps.testing = testing


/*
versions.arch_core = "2.0.0"
versions.lifecycle = "2.0.0"
versions.support = "1.0.0"
versions.dagger = "2.16"
versions.junit = "4.12"
versions.espresso = "3.1.0-alpha4"
versions.retrofit = "2.3.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.mockwebserver = "3.8.1"
versions.apache_commons = "2.5"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.22.0"
versions.dexmaker = "2.2.0"
versions.glide = "4.8.0"
versions.timber = "4.5.1"
versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"
versions.atsl_runner = "1.1.0-alpha4"
versions.atsl_rules = "1.1.0-alpha4"
versions.hamcrest = "1.3"
versions.paging = "2.1.0-beta01"
versions.navigation = "1.0.0-alpha07"
versions.work = "1.0.0-alpha11"
*/


/*
def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
deps.support = support
*/


/*
def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
deps.lifecycle = lifecycle
*/

/*
def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
*/

/*
def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger
*/

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

/*
def atsl = [:]
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito
*/


/*
deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
*/


/*
def work = [:]
work.runtime = "android.arch.work:work-runtime:$versions.work"
work.testing = "android.arch.work:work-testing:$versions.work"
work.firebase = "android.arch.work:work-firebase:$versions.work"
work.runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.work"
deps.work = work
*/

/*
def navigation = [:]
navigation.runtime = "android.arch.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "android.arch.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "android.arch.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.safe_args_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
navigation.testing = "android.arch.navigation:navigation-testing:$versions.navigation"
deps.navigation = navigation
*/

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.maven { url 'https://maven.google.com' }
    handler.jcenter()
}
ext.addRepos = this.&addRepos

def addAppRepos(RepositoryHandler handler) {
    handler.maven { url 'https://maven.google.com' }
    handler.jcenter()
}
ext.addAppRepos = this.&addAppRepos
