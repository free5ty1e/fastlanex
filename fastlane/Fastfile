# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
update_fastlane

default_platform(:android)

$gradleTimeoutOptions = "-Dorg.gradle.internal.http.socketTimeout=60000 -Dorg.gradle.internal.http.connectionTimeout=60000 "
$gradleIntTestSizeOption = "-Pandroid.testInstrumentationRunnerArguments.size=small "
$gradleTestRunnerOption = "-PandroidTestRunner=androidx.test.runner.AndroidJUnitRunner "
$gradleOtherTestOptions = "--continue --full-stacktrace "

platform :android do
  desc "Build required apk and test apk for screengrab command"
  lane :gradletasks do
    gradle(
      task: "tasks",
      print_command: true,
      flags: $gradleTimeoutOptions
    )
  end

  lane :assemblerelease do
    gradle(
      task: "assemblerelease",
      print_command: true,
      flags: $gradleTimeoutOptions
    )
  end

  lane :lintscan do
    gradle(
      task: "lint",
      print_command: true,
      flags: $gradleTimeoutOptions
    )
  end

  lane :unittests do
    gradle(
      task: "test",
      print_command: true,
      flags: $gradleTimeoutOptions
    )
  end

  desc "Switch to the FastlaneTestRunner"
  lane :switchtofastlanetestrunner do
    sh "sed -i '' '/androidTestRunner/s/.*/androidTestRunner=com.example.fastlanex.testutilities.FastlaneTestRunner/' ../gradle.properties"
    sh "sed -i '' '/@Ignore/s/^/\\/\\//g' ../app/src/androidTest/java/com/example/fastlanex/view/fastlane/*"
  end

  desc "Switch to the AndroidXTestRunner"
  lane :switchtoandroidxtestrunner do
    sh "sed -i '' '/androidTestRunner/s/.*/androidTestRunner=androidx.test.runner.AndroidJUnitRunner/' ../gradle.properties"
    sh "sed -i '' '/@Ignore/s/^\\/\\/*//g' ../app/src/androidTest/java/com/example/fastlanex/view/fastlane/*"
  end

  desc "Build required apk and test apk for screengrab command"
  lane :grabprep do
    switchtofastlanetestrunner
    gradle(
      task: "assembleDebug assembleDebugAndroidTest",
      print_command: true,
      flags: $gradleTimeoutOptions
    )
    switchtoandroidxtestrunner
  end

  desc "Prepare for and grab screenshots using fastlane screengrab"
  lane :prepandgrabscreenshots do
    grabprep
    screengrab
  end

  desc "Prepare for and grab screenshots using fastlane screengrab"
  lane :screens do
    prepandgrabscreenshots
  end

  desc "Runs all the tests with coverage"
  lane :alltests do
#    gradle(task: "jacocoCoverage",
    gradle(task: "cAT",
      print_command: true,
      flags: $gradleIntTestSizeOption + $gradleTestRunnerOption + $gradleOtherTestOptions + $gradleTimeoutOptions
    )
  end

  desc "Runs Small QA flavor tests with coverage"
  lane :smalltests do
    gradle(task: "createDebugCoverageReport",
      print_command: true,
      flags: $gradleIntTestSizeOption + $gradleTestRunnerOption + $gradleOtherTestOptions + $gradleTimeoutOptions
    )
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease",
      print_command: true,
      flags: $gradleTimeoutOptions
      )
    crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease",
      print_command: true,
      flags: $gradleTimeoutOptions
      )
    upload_to_play_store
  end
end
